DELIVERABLE 2
-------------
1) ok
SELECT AVG(L.price)
FROM listings L
WHERE L.bedrooms = 8

2) ok
SELECT AVG(L.review_scores_cleanliness)
FROM Listings L, amenities_and_listings A_L, amenities AM
WHERE (A_L.amenity_id = AM.amenity_id)
  AND (A_L.listing_id = L.listing_id) 
  AND (AM.amenity = 'TV');

3) ok
SELECT DISTINCT H.HOST_NAME
FROM hosts H, listings L
WHERE H.host_id = L.host_id
  AND 'f' NOT IN 
    (SELECT C.available
    FROM calendar C
    WHERE C.LISTING_ID = L.LISTING_ID
      AND C.DATE_CALENDAR > TO_DATE('2019-03-01','yyyy-mm-dd')
      AND C.DATE_CALENDAR < TO_DATE('2019-09-01','yyyy-mm-dd'));

4) ok
SELECT COUNT(L.LISTING_ID)
FROM Listings L
WHERE L.HOST_ID IN
  ((SELECT DISTINCT H1.host_id
  FROM Hosts H1, Hosts H2
  WHERE H1.host_id < H2.host_id AND H1.host_name = H2.host_name));

5) ok
SELECT C.DATE_CALENDAR
FROM CALENDAR C, HOSTS H, LISTINGS L
WHERE H.HOST_ID = L.HOST_ID
  AND L.LISTING_ID = C.LISTING_ID
  AND H.host_name = 'Viajes Eco';

6) ok
SELECT HOST_NAME FROM 
(SELECT H.HOST_NAME, COUNT(L.LISTING_ID) AS coconut
FROM HOSTS H, LISTINGS L
WHERE H.HOST_ID = L.HOST_ID
GROUP BY H.HOST_NAME)
WHERE coconut = 1;

DELIVERABLE 3
-------------
1) ok
SELECT City.city, COUNT(H.HOST_ID)
FROM HOSTS H, LISTINGS L, NEIGH N, CITIES City
WHERE H.host_id = L.host_id
  AND L.SQUARE_FEET IS NOT NULL
  AND H.NEIGH_ID = N.NEIGH_ID
  AND N.city_id = City.city_id
  GROUP BY City
  ORDER BY City;

4) ok (je crois)
SELECT DISTINCT(L.LISTING_ID), AVG(C.PRICE)
FROM LISTINGS L, PROPERTY_TYPES PT, NEIGH N, CITIES City, CALENDAR C, CANCELLATION_POLICIES CP, HOSTS H, HOST_VERIF_AND_HOST HVH, HOST_VERIFICATIONS HV
WHERE L.PROPERTY_TYPE_ID = PT.PROPERTY_TYPE_ID
  AND PT.PROPERTY_TYPE = 'Apartment'
  AND N.NEIGH_ID = L.NEIGH_ID
  AND N.CITY_ID = City.CITY_ID
  AND City.CITY = 'berlin'
  AND C.LISTING_ID = L.LISTING_ID
  AND C.DATE_CALENDAR > TO_DATE('2019-03-01','yyyy-mm-dd')
  AND C.DATE_CALENDAR < TO_DATE('2019-09-01','yyyy-mm-dd')
  AND C.price IS NOT NULL
  AND L.BEDS > 2
  AND L.REVIEW_SCORES_LOCATION >= 8
  AND CP.CANCELLATION_POLICY_ID = L.CANCELLATION_POLICY_ID
  AND CP.CANCELLATION_POLICY = 'flexible'
  AND L.HOST_ID = H.HOST_ID
  AND H.HOST_ID = HVH.HOST_ID
  AND HVH.HOST_VERIFICATION_ID = HV.HOST_VERIFICATION_ID
  AND HV.HOST_VERIFICATION = ' government_id'
  GROUP BY L.LISTING_ID
  ORDER BY AVG(C.price)
FETCH FIRST 5 ROWS ONLY;

5) ok
WITH temp AS(
  SELECT DISTINCT(L.listing_id), L.name, L.accommodates, L.review_scores_rating
  FROM Listings L, AMENITIES A1, AMENITIES A2, AMENITIES_AND_LISTINGS A_A_L1, AMENITIES_AND_LISTINGS A_A_L2
  WHERE L.listing_id = A_A_L1.listing_id
    AND L.listing_id = A_A_L2.listing_id
    AND A_A_L1.amenity_id = A1.amenity_id
    AND A_A_L2.amenity_id = A2.amenity_id
    AND ((A1.amenity = 'Wifi' AND A2.amenity = 'Internet') 
          OR (A1.amenity = 'Wifi' AND A2.amenity = 'TV') 
          OR (A1.amenity = 'Internet' AND A2.amenity = 'TV')))

SELECT 
  ACCOMMODATES, REVIEW_SCORES_RATING, NAME
FROM 
  (SELECT 
    L.name, L.Accommodates, L.review_scores_rating, ROW_NUMBER() OVER (PARTITION BY L.Accommodates ORDER BY L.Review_scores_rating DESC) rank
  FROM
    temp L
  WHERE 
    L.REVIEW_SCORES_RATING IS NOT NULL)
WHERE
    RANK < 6;

7) ok
SELECT N.NEIGH, A.AMENITY
FROM
  (SELECT 
    NEIGH_ID N_ID, AMENITY_ID A_ID, ROW_NUMBER() OVER (PARTITION BY NEIGH_ID ORDER BY CNT) ROW_N
  FROM 
    (SELECT
      NEIGH_ID, AMENITY_ID, COUNT(*) CNT
    FROM 
      (SELECT 
        N.NEIGH_ID, A_A_L.AMENITY_ID
        FROM
          LISTINGS L, ROOM_TYPES RT, NEIGH N, CITIES C, AMENITIES_AND_LISTINGS A_A_L
        WHERE L.ROOM_TYPE_ID = RT.ROOM_TYPE_ID
          AND RT.ROOM_TYPE = 'Private room'
          AND L.NEIGH_ID = N.NEIGH_ID
          AND C.CITY_ID = N.CITY_ID
          AND C.CITY = 'berlin'
          AND L.LISTING_ID = A_A_L.LISTING_ID)
    GROUP BY NEIGH_ID, AMENITY_ID
    ORDER BY NEIGH_ID)),
    AMENITIES A,
    NEIGH N
WHERE ROW_N < 4
  AND A.AMENITY_ID = A_ID
  AND N.NEIGH_ID = N_ID;

10)
WITH temp AS(  
  SELECT 
    NEIGH_ID, COUNT(*) N
  FROM
    (SELECT
      L.NEIGH_ID, ROW_NUMBER() OVER (PARTITION BY L.NEIGH_ID ORDER BY L.NEIGH_ID, C.DATE_CALENDAR) ROW_NUM
    FROM
      (SELECT
        L.LISTING_ID, L.NEIGH_ID
      FROM
        LISTINGS L,
        HOSTS H
      WHERE H.HOST_ID = L.LISTING_ID
        AND H.HOST_SINCE < TO_DATE('2017-06-02','yyyy-mm-dd')) L,
        CALENDAR C
    WHERE C.LISTING_ID = L.LISTING_ID
      AND C.DATE_CALENDAR > TO_DATE('2019-03-01','yyyy-mm-dd')
      AND C.DATE_CALENDAR < TO_DATE('2019-09-01','yyyy-mm-dd')
      AND C.AVAILABLE = 't')
  GROUP BY NEIGH_ID)
  
SELECT N.NEIGH 
FROM 
  temp T, NEIGH N 
WHERE T.N > 182
  AND N.NEIGH_ID = T.NEIGH_ID;